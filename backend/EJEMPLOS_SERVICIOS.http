### ===========================================================================
### EJEMPLOS DE USO - MÓDULO DE SERVICIOS
### Kallma Resort - API de Servicios Adicionales
### ===========================================================================

@baseUrl = http://localhost:3000/api
@token = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...

### ===========================================================================
### 1. LISTAR SERVICIOS (PÚBLICO - SIN AUTENTICACIÓN)
### Usado en el flujo del cliente para seleccionar servicios al hacer reserva
### ===========================================================================

GET {{baseUrl}}/servicios
Content-Type: application/json

### Respuesta esperada:
# {
#   "ok": true,
#   "data": [
#     {
#       "id_servicio": 1,
#       "nom_servicio": "Gimnasio",
#       "precio_servicio": "15000.00"
#     },
#     {
#       "id_servicio": 2,
#       "nom_servicio": "SPA",
#       "precio_servicio": "30000.00"
#     },
#     {
#       "id_servicio": 3,
#       "nom_servicio": "Restaurante",
#       "precio_servicio": "45000.00"
#     }
#   ],
#   "total": 3
# }


### ===========================================================================
### 2. OBTENER DETALLE DE SERVICIO (STAFF)
### Ver información detallada incluyendo cuántas reservas usan el servicio
### ===========================================================================

GET {{baseUrl}}/servicios/1
Content-Type: application/json
Authorization: Bearer {{token}}

### Respuesta esperada:
# {
#   "ok": true,
#   "data": {
#     "id_servicio": 1,
#     "nom_servicio": "Gimnasio",
#     "precio_servicio": "15000.00",
#     "total_reservas": "5"
#   }
# }


### ===========================================================================
### 3. CREAR SERVICIO (SOLO ADMIN)
### ===========================================================================

POST {{baseUrl}}/servicios
Content-Type: application/json
Authorization: Bearer {{token}}

{
  "nom_servicio": "Piscina Climatizada",
  "precio_servicio": 20000
}

### Respuesta esperada (201):
# {
#   "ok": true,
#   "message": "Servicio creado exitosamente",
#   "data": {
#     "id_servicio": 4,
#     "nom_servicio": "Piscina Climatizada",
#     "precio_servicio": "20000.00"
#   }
# }


### ===========================================================================
### 4. CREAR SERVICIO - Validación: Nombre duplicado
### ===========================================================================

POST {{baseUrl}}/servicios
Content-Type: application/json
Authorization: Bearer {{token}}

{
  "nom_servicio": "Gimnasio",
  "precio_servicio": 10000
}

### Respuesta esperada (409):
# {
#   "ok": false,
#   "error": "Ya existe un servicio con ese nombre"
# }


### ===========================================================================
### 5. CREAR SERVICIO - Validación: Precio negativo
### ===========================================================================

POST {{baseUrl}}/servicios
Content-Type: application/json
Authorization: Bearer {{token}}

{
  "nom_servicio": "Sauna",
  "precio_servicio": -5000
}

### Respuesta esperada (400):
# {
#   "ok": false,
#   "errors": [
#     {
#       "field": "precio_servicio",
#       "message": "El precio del servicio no puede ser negativo"
#     }
#   ]
# }


### ===========================================================================
### 6. CREAR SERVICIO - Validación: Campos faltantes
### ===========================================================================

POST {{baseUrl}}/servicios
Content-Type: application/json
Authorization: Bearer {{token}}

{
  "nom_servicio": "Masajes"
}

### Respuesta esperada (400):
# {
#   "ok": false,
#   "errors": [
#     {
#       "field": "precio_servicio",
#       "message": "El precio del servicio es obligatorio"
#     }
#   ]
# }


### ===========================================================================
### 7. ACTUALIZAR SERVICIO (SOLO ADMIN)
### ===========================================================================

PATCH {{baseUrl}}/servicios/1
Content-Type: application/json
Authorization: Bearer {{token}}

{
  "nom_servicio": "Gimnasio Premium",
  "precio_servicio": 18000
}

### Respuesta esperada (200):
# {
#   "ok": true,
#   "message": "Servicio actualizado exitosamente",
#   "data": {
#     "id_servicio": 1,
#     "nom_servicio": "Gimnasio Premium",
#     "precio_servicio": "18000.00"
#   }
# }


### ===========================================================================
### 8. ACTUALIZAR SERVICIO - Solo precio
### ===========================================================================

PATCH {{baseUrl}}/servicios/2
Content-Type: application/json
Authorization: Bearer {{token}}

{
  "precio_servicio": 35000
}

### Respuesta esperada (200):
# {
#   "ok": true,
#   "message": "Servicio actualizado exitosamente",
#   "data": {
#     "id_servicio": 2,
#     "nom_servicio": "SPA",
#     "precio_servicio": "35000.00"
#   }
# }


### ===========================================================================
### 9. ACTUALIZAR SERVICIO - Validación: Nombre duplicado
### ===========================================================================

PATCH {{baseUrl}}/servicios/1
Content-Type: application/json
Authorization: Bearer {{token}}

{
  "nom_servicio": "SPA"
}

### Respuesta esperada (409):
# {
#   "ok": false,
#   "error": "Ya existe otro servicio con ese nombre"
# }


### ===========================================================================
### 10. ELIMINAR SERVICIO (SOLO ADMIN)
### Solo si NO tiene reservas asociadas
### ===========================================================================

DELETE {{baseUrl}}/servicios/4
Content-Type: application/json
Authorization: Bearer {{token}}

### Respuesta esperada (200):
# {
#   "ok": true,
#   "message": "Servicio eliminado exitosamente",
#   "data": {
#     "id_servicio": 4,
#     "nom_servicio": "Piscina Climatizada",
#     "precio_servicio": "20000.00"
#   }
# }


### ===========================================================================
### 11. ELIMINAR SERVICIO - Error: Tiene reservas asociadas
### ===========================================================================

DELETE {{baseUrl}}/servicios/1
Content-Type: application/json
Authorization: Bearer {{token}}

### Respuesta esperada (400):
# {
#   "ok": false,
#   "error": "No se puede eliminar el servicio porque tiene reservas asociadas"
# }


### ===========================================================================
### 12. OBTENER SERVICIO - Error: No existe
### ===========================================================================

GET {{baseUrl}}/servicios/999
Content-Type: application/json
Authorization: Bearer {{token}}

### Respuesta esperada (404):
# {
#   "ok": false,
#   "error": "Servicio no encontrado"
# }


### ===========================================================================
### 13. ELIMINAR SERVICIO - Error: ID inválido
### ===========================================================================

DELETE {{baseUrl}}/servicios/abc
Content-Type: application/json
Authorization: Bearer {{token}}

### Respuesta esperada (400):
# {
#   "ok": false,
#   "error": "ID de servicio inválido"
# }


### ===========================================================================
### FLUJO COMPLETO: CLIENTE HACE RESERVA CON SERVICIOS
### ===========================================================================

### Paso 1: Cliente consulta disponibilidad (sin login)
POST {{baseUrl}}/reservas/disponibilidad
Content-Type: application/json

{
  "check_in": "2025-11-01",
  "check_out": "2025-11-05",
  "cant_personas": 4
}

### Paso 2: Cliente consulta servicios disponibles (sin login)
GET {{baseUrl}}/servicios
Content-Type: application/json

### Paso 3: Cliente selecciona cabañas y servicios
# Frontend: Usuario marca checkboxes de servicios (ids: 1, 2)
# Frontend: Usuario calcula monto total mostrando desglose

### Paso 4: Cliente se autentica
POST {{baseUrl}}/users/login
Content-Type: application/json

{
  "email": "cliente@example.com",
  "password": "password123"
}

### Paso 5: Cliente crea reserva con servicios
POST {{baseUrl}}/reservas
Content-Type: application/json
Authorization: Bearer {{token}}

{
  "check_in": "2025-11-01",
  "check_out": "2025-11-05",
  "cant_personas": 4,
  "cabanas_ids": [1, 2],
  "servicios_ids": [1, 2]
}

### ===========================================================================
### NOTA: CÁLCULO DE PRECIOS
### ===========================================================================
# 
# El precio de servicios se calcula en el backend (módulo de reservas):
# 
# Precio Total Servicios = SUM(precio_servicio × noches × cant_personas)
# 
# Ejemplo:
# - Gimnasio: 15000 × 4 noches × 4 personas = 240,000
# - SPA: 30000 × 4 noches × 4 personas = 480,000
# - Total servicios: 720,000
# 
# Precio Total Reserva = Precio Cabañas + Precio Servicios
# 
### ===========================================================================
